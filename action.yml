name: 'Action to create puppet module repository from template'
description: 'create puppet module repository from template'
inputs:
  pr_changes:
    require: true
    type: number
    
runs:
  using: "composite"
  steps:
  - id: step1
    shell: bash
    name: create puppet module repository from template
    run: |
      set -eo pipefail
           
      changes=${{ inputs.pr_changes }}
      
      echo " "
      echo "Extracting puppet repo name and team name"
      echo " "
      puppet_repo_name=$(echo $changes | cut -d: -f1)
      team_name=$(echo $changes | cut -d: -f2)
      
      echo " "
      echo "Creating a file under github org manager"
      echo " "
      
      content="archived: false
               branch_protection_rules: []
               default_branch: main
               description: ''
               name: ${puppet_repo_name}
               teams: []
               users: []
               visibility: PRIVATE"
               
      gh auth login --with-token < ~/.gh_secrets
      
      echo " "
      echo "Cloning github org manager repo..!!"
      echo " "
      
      gh repo clone https://github.com/pcherukusfdc/github_org_manager_pcheruku.git
      
      echo " "
      echo "Changing into github org manager repo..!!"
      echo " "
      
      cd ${github_org_manager_pcheruku}
      
      echo " "
      echo "Adding new repo file to github org manager repo..!!"
      echo " "
      
      touch repos/${puppet_repo_name}.yaml
      
      echo ${content} > repos/${puppet_repo_name}.yaml
      
      echo " "
      echo "Adding changes to the local workspace..!!"
      echo " "
      
      git add .
      
      echo " "
      echo "Committing changes to the local workspace!!"
      echo " "
      
      git commit -m "Add ${puppet_repo_name} repo to github org manager"
      
      echo " "
      echo "Push changes to the github org manager main branch..!!"
      echo " "
      
      git push origin main
      if [[ $? != 0 ]]
      then
        echo "Changes not pushed to github org manager..!!"
        gh auth logout --hostname github.com
        exit 1
      else
        echo "Changes pushed to github org manager..!!"
      fi
      
      echo " "
      echo "Puppet repo to create ${puppet_repo_name}, team to give access is ${team_name}"
      echo " "
   
      echo " "
      echo "Checking the ${puppet_repo_name} repo in workspace already existing or not.."
      echo " "
      gh auth login --with-token < ~/.gh_secrets
      
      repo_status=$(curl -H "Authorization: Bearer $(cat ~/.gh_secrets)" https://api.github.com/repos/pcherukusfdc/${puppet_repo_name} | jq -r '.message')
      
      #repo_list=$(gh repo list | awk '{print $1}' | sed 's/pcherukusfdc\///')
      #if [[ $(grep -q ${puppet_repo_name} ${repo_list} 2>/dev/null) == 0 ]]
      if [[ ${repo_status} == 'Not Found' ]]
      then
        echo " " 
        echo "Repository ${puppet_repo_name} does not exist, proceding to create.."
        echo " "        
      else
        echo " "
        echo "Repository ${puppet_repo_name} already exist, quitting..!!"
        echo " "
        gh auth logout --hostname github.com
        exit 0
      fi
      
      echo " "
      echo "Creating empty repository ${puppet_repo_name} in GitHub GUI under pcherukusfdc workspace"
      echo " "
      gh repo create ${puppet_repo_name} --public
      
      echo $(pwd)
      
      echo " "
      echo "Clonning the template repo puppet_module_tpt"
      echo " "
      if [[ -d 'puppet_module_tpt.git' ]] ; then rm -rf puppet_module_tpt.git ; fi
      
      git clone --bare https://oauth2:$(cat ~/.gh_secrets)@github.com/pcherukusfdc/puppet_module_tpt.git
      
      echo " "
      echo "Changing into puppet template repository"
      echo " "
      cd puppet_module_tpt.git
     
      echo " "
      echo "Push the template repository to the new repository.."
      echo " "
      git push --mirror https://oauth2:$(cat ~/.gh_secrets)@github.com/pcherukusfdc/${puppet_repo_name}.git
      
      #echo "Checking if the team exist or not..!!"
      #curl -s -X GET -H "Authorization: Bearer $(cat ~/.gh_secrets)" https://api.github.com/repos/pcherukusfdc/teams | jq -r '.[] | .name' | grep ${team_name}
      #if [[ $? != 0 ]]
      #then
      #  echo "Team does not exist.."
      #else
      #  echo "The team already exist..!!"
      #  echo "Give maintainer access to the team ${team} for repo ${puppet_repo_name}"
        #curl -X PUT -H "Authorization: Bearer $(cat ~/.gh_secrets)" https://api.github.com/repos/pcherukusfdc/${puppet_repo_name}/collaborators/${team} -d '{"permission”:”maintain”}’
        curl -X PUT -H "Authorization: Bearer $(cat ~/.gh_secrets)" https://api.github.com/repos/pcherukusfdc/${puppet_repo_name}/collaborators/prathima-chitturi -d '{"permission”:”maintain”}' >/dev/null
        
        if [[ $? == 0 ]]
        then
          echo " "
          echo "Provided access to the ${team} team to the repository ${puppet_repo_name}"
          echo " "
        else
          echo " "
          echo "Unable to provide access..!!"
          echo " "
          exit 1
        fi
      #fi
